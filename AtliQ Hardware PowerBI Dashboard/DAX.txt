GS $                            = SUM(fact_actuals_estimates[gross_sales_amount])
NIS $                           = SUM(fact_actuals_estimates[net_invoice_sales_amount])
Pre Invoice Deduction $         = [GS $] - [NIS $]
Post Invoice Deduction $        = SUM(fact_actuals_estimates[post_invoice_deductions_amount])
Post Invoice Other Deduction $  = SUM(fact_actuals_estimates[post_invoice_other_deductions_amount])
Total Post Invoice Deduction $  = [Post Invoice Deduction $] + [Post Invoice Other Deduction $]
NS $                            = SUM(fact_actuals_estimates[net_sales_amount])
Manufacturing Cost $            = SUM(fact_actuals_estimates[manufacturing_cost])
Freight Cost $                  = SUM(fact_actuals_estimates[freight_cost])
Other Cost $                    = SUM(fact_actuals_estimates[other_cost])
Total COGS $                    = [Manufacturing Cost $] + [Freight Cost $] + [Other Cost $]
GM $                            = [NS $] - [Total COGS $]
GM % 					  = DIVIDE([GM $],[NS $],0)
Quantity 				  = SUM(fact_actuals_estimates[Qty])
GM / Unit 				  = DIVIDE([GM $],[Quantity],0)

P & L Values = 
var res = SWITCH(
TRUE(),
MAX('P & L Rows'[Order]) = 1, [GS $]/1000000,
MAX('P & L Rows'[Order]) = 2, [Pre Invoice Deduction $]/1000000,
MAX('P & L Rows'[Order]) = 3, [NIS $]/1000000,
MAX('P & L Rows'[Order]) = 4, [Post Invoice Deduction $]/1000000,
MAX('P & L Rows'[Order]) = 5, [Post Invoice Other Deduction $]/1000000,
MAX('P & L Rows'[Order]) = 6, [Total Post Invoice Deduction $]/1000000,
MAX('P & L Rows'[Order]) = 7, [NS $]/1000000,
MAX('P & L Rows'[Order]) = 8, [Manufacturing Cost $]/1000000,
MAX('P & L Rows'[Order]) = 9, [Freight Cost $]/1000000,
MAX('P & L Rows'[Order]) = 10, [Other Cost $]/1000000,
MAX('P & L Rows'[Order]) = 11, [Total COGS $]/1000000,
MAX('P & L Rows'[Order]) = 12, [GM $]/1000000,
MAX('P & L Rows'[Order]) = 13, [GM %] * 100,
MAX('P & L Rows'[Order]) = 14, [GM / Unit],
MAX('P & L Rows'[Order]) = 15, [Operational Expense $]/1000000,
MAX('P & L Rows'[Order]) = 16,[Net Profit $]/1000000,
MAX('P & L Rows'[Order]) = 17, [Net Profit %] * 100
)

return 
IF(HASONEVALUE('P & L Rows'[Description]),res,[NS $]/1000000)




P & L LY                            = CALCULATE([P & L Values],SAMEPERIODLASTYEAR(dim_date[date]))
P & L YoY Chg                       = [P & L Values] - [P & L LY]
P & L YoY Chg  %                    = DIVIDE([P & L YoY Chg],[P & L LY],0) * 100
P & L Final Value                   = SWITCH(TRUE(),
SELECTEDVALUE(fiscal_year[fy_desc]) = MAX('P & L Columns'[Col Header]),[P & L Values],
MAX('P & L Columns'[Col Header])    = "LY", [P & L LY],
MAX('P & L Columns'[Col Header])    = "YoY Chg", [P & L YoY Chg],
MAX('P & L Columns'[Col Header])    = "YoY Chg %", [P & L YoY Chg  %])


Selected P & L Row = IF(HASONEVALUE('P & L Rows'[Description]), SELECTEDVALUE('P & L Rows'[Description]),"Net Sales")

Performance Visual Title = [Selected P & L Row] & " Performance Over Time"

Ads & Promotions $= SUM(fact_actuals_estimates[ads_promotions])
Other Operational Expense $= SUM(fact_actuals_estimates[other_operational_expenses])
Operational Expense $ = -1 * ([Ads & Promotions $] + [Other Operational Expense $])
Net Profit $ = [GM $] + [Operational Expense $]
Net Profit % = DIVIDE([Net Profit $],[NS $],0)




Sales Qty = CALCULATE([Quantity],fact_actuals_estimates[date] <= MAX((LastSalesMonth[LastSalesMonth]))
Forecast Qty = 
var lsalesdate = MAX(LastSalesMonth[LastSalesMonth])
return
CALCULATE(SUM(fact_forecast_monthly[Qty]),fact_forecast_monthly[date] <= lsalesdate)


Net Error              = [Forecast Qty] - [Sales Qty]
Net Error %            = DIVIDE([Net Error],[Forecast Qty],0)
ABS Error              = 
SUMX(DISTINCT(dim_date[date]),
SUMX(DISTINCT(dim_product[product_code]),ABS([Net Error])))
ABS Error %            = DIVIDE([ABS Error],[Forecast Qty],0)
Forecast Accuracy %    = IF([ABS Error %] <> BLANK(),1 - [ABS Error %],BLANK())
Forecast Accuracy % LY = CALCULATE([Forecast Accuracy %],SAMEPERIODLASTYEAR(dim_date[date]))
Risk = If([Net Error] > 0, "Excess Inventory", IF([Net Error] < 0, "Out of Stock",BLANK()))


Top / Bottom N title   = "Top / Botttom Products & Customers By "  & [Selected P & L Row] 
NS $ LY                = CALCULATE([NS $],SAMEPERIODLASTYEAR(dim_date[date]))
GM % LY                = CALCULATE([GM %],SAMEPERIODLASTYEAR(dim_date[date]))
Net Profit % LY        = CALCULATE([Net Profit %], SAMEPERIODLASTYEAR(dim_date[date]))
Net Error LY           = CALCULATE([Net Error], SAMEPERIODLASTYEAR(dim_date[date])
Last Sales Month Footer = "Sales Data Loaded Unitl " & FORMAT(MAX(LastSalesMonth[LastSalesMonth]),"mmm yy")





GM Target $= Sum(NsGmTarget[gm_target])
NP Target $= SUM(NsGmTarget[np_target])

GM % Target = DIVIDE([GM Target $],SUM(NsGmTarget[ns_target]),0)
NP % Target = DIVIDE([NP Target $],SUM(NsGmTarget[ns_target]),0)


NS BM $ = 
SWITCH(TRUE(),
SELECTEDVALUE('Set BM'[ID]) = 1,[NS $ LY],
SELECTEDVALUE('Set BM'[ID]) = 2, [NS Target $])

GM % BM = 
SWITCH(TRUE(),
SELECTEDVALUE('Set BM'[ID]) = 1, [GM % LY],
SELECTEDVALUE('Set BM'[ID]) = 2, [GM % Target])

NP % BM = 
SWITCH(TRUE(),
SELECTEDVALUE('Set BM'[ID]) = 1, [Net Profit % LY],
SELECTEDVALUE('Set BM'[ID]) = 2, [NP % Target])

Customer /Product Filter Check = ISCROSSFILTERED(dim_product[product]) || ISFILTERED(dim_customer[customer])

NS Target $ = 
var tgt = SUM(NsGmTarget[ns_target])

return IF([Customer /Product Filter Check],BLANK(),tgt)


BM Message = IF([NS BM $] = BLANK() || [GM % BM] = BLANK() || [NP % BM] = BLANK(), "BM Target(s) is not available for the selected filters","")

P & L Target = 
var res = SWITCH(
TRUE(),

MAX('P & L Rows'[Order]) = 7, [NS Target $]/1000000,
MAX('P & L Rows'[Order]) = 12, [GM Target $]/1000000,
MAX('P & L Rows'[Order]) = 13, [GM % Target]* 100,
MAX('P & L Rows'[Order]) = 17, [NP % Target] * 100
)

return 
IF(HASONEVALUE('P & L Rows'[Description]),res,[NS Target $]/1000000)


P & L BM = SWITCH(TRUE(),
SELECTEDVALUE('Set BM'[ID]) = 1, [P & L LY],
SELECTEDVALUE('Set BM'[ID]) = 2, [P & L Target])

P & L Chg = 
var res =[P & L Values] - [P & L BM]
return IF(ISBLANK([P & L BM]) || ISBLANK([P & L Values]),BLANK(),res)

P & L Chg  % = 
var res = DIVIDE([P & L Chg],[P & L BM],0) * 100
return 
IF(ISBLANK([P & L BM]) || ISBLANK([P & L Values]),BLANK(),res)

GM % Variance  = [GM % BM] - [GM %]

GM % Filter = IF([GM % Variance] >= SELECTEDVALUE('Target Gap Tolerance'[Target Gap Tolerance]),1,0)

Sales Trend  Title = "NS & GM % for " & SELECTEDVALUE(dim_customer[customer])

Market Share % = DIVIDE(SUM(marketshare[sales_$]),SUM(marketshare[total_market_sales_$]),0)

RC % = DIVIDE([NS $],CALCULATE([NS $],ALL(dim_market),ALL(dim_customer),ALL(dim_product))
AtliQ MS %  = CALCULATE([Market Share %],marketshare[manufacturer] = "atliq")

```
fy_desc = 
var MAXDATE = CALCULATE(MAX(fiscal_year[fiscal_year]),ALL(fiscal_year[fiscal_year]))
return 
IF(fiscal_year[fiscal_year] =  MAXDATE, MAXDATE & " Est", fiscal_year[fiscal_year])
```


```
P & L Columns = 
var x = ALLNOBLANKROW(fiscal_year[fy_desc])

return 
UNION(
    ROW("Col Header", "LY"),
    ROW("Col Header", "YoY Chg"),
    ROW("Col Header", "YoY Chg %"),x
)

```

fy_month_num = MONTH(DATE(YEAR(dim_date[date]),MONTH(dim_date[date]) + 4,1))
quarters = "Q" & ROUNDUP(dim_date[fy_month_num]/3,0)

ytd_ytg = 
var LASTSALESDATE = MAX(fact_sales_monthly[date])
var FYMONTHNUM = MONTH(DATE(YEAR(LASTSALESDATE), MONTH(LASTSALESDATE) + 4, 1))
return
IF(dim_date[fy_month_num] > FYMONTHNUM, "YTG","YTD")

CALCULATED COLUMNS 
---------------------------------
manufacturing_cost = 
var res = CALCULATE(MAX(manufacturing_cost[manufacturing_cost]),
RELATEDTABLE(manufacturing_cost))
return res*fact_actuals_estimates[Qty]

freight_cost = 
var res = CALCULATE(MAX(freight_cost[freight_pct]),
RELATEDTABLE(freight_cost))
return res*fact_actuals_estimates[net_sales_amount]

other_cost = 
var res = CALCULATE(MAX(freight_cost[other_cost_pct]),
RELATEDTABLE(freight_cost))
return res*fact_actuals_estimates[net_sales_amount]


ads_promotions = 
var res = CALCULATE(MAX('Operational Expenses'[ads_promotions_pct]),
RELATEDTABLE('Operational Expenses'))
return res*fact_actuals_estimates[net_sales_amount]

other_operational_expenses = 
var res = CALCULATE(MAX('Operational Expenses'[other_operational_expense_pct]),
RELATEDTABLE('Operational Expenses'))
return res*fact_actuals_estimates[net_sales_amount]

ytd_ytg = 
var LASTSALESDATE = MAX(LastSalesMonth[LastSalesMonth])
var FYMONTHNUM = MONTH(DATE(YEAR(LASTSALESDATE), MONTH(LASTSALESDATE) + 4, 1))
return
IF(dim_date[fy_month_num] > FYMONTHNUM, "YTG","YTD")


Creating Table

sub_zone = ALLNOBLANKROW(dim_market[sub_zone])
category = ALLNOBLANKROW(dim_product[category])
